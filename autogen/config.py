# +++++++++++++++++ #
# DO NOT EDIT BELOW #
# +++++++++++++++++ #

import os
import platform
import json
import glob

with open(
    os.path.join(os.path.dirname(os.path.abspath(__file__)), "exported.json")
) as f:
    mod_load_list_json = json.load(f)

if platform.system() == "Windows":
    stellaris_path = "C:/Program Files (x86)/Steam/steamapps/workshop/content/281990/"
elif platform.system() == "Linux":
    stellaris_path = (
        os.environ["HOME"] + "/.local/share/Steam/steamapps/workshop/content/281990/"
    )

if platform.system() == "Windows":
    stellaris_game_path = "C:/Program Files (x86)/Steam/steamapps/common/Stellaris/"
elif platform.system() == "Linux":
    stellaris_game_path = (
        os.environ["HOME"] + "/.local/share/Steam/steamapps/common/Stellaris/"
    )

mod_installed = set(
    [os.path.basename(x) for x in glob.glob(os.path.join(stellaris_path, "*"))]
)
mod_order = [str(i["SteamId"]) for i in mod_load_list_json["ModIds"] if i["SteamId"]]
mod_loaded = set(mod_order)

file_prefix = "zzzzzzzzzzzzzzzzzzzz_"  # file prefix for autogenerated files

aot_modid = "2178603631"  # Acquisition of Technologies modid
mr_modid = "2807759164"  # Merger of Rules modid
aup_modid = "1995601384"  # unofficial patch
giga_modid = "1121692237"  # gigastructure

# Default mod excludes
mod_excludes = list(mod_installed - mod_loaded)

mod_excludes += [
    "2529002857",  # production revolution SHOULD BE DISABLED
    "2830366252",  # production revolution patch SHOULD BE DISABLED
    "2466607238",  # Kasako framework SHOULD BE DISABLED
]  # TODO: load irony/stellaris launcher database to obtain excludes

# +++++++++++++++++ #
# PLEASE EDIT BELOW #
# +++++++++++++++++ #

# mod_order is the dictionary of pairs of job name and mod id, suggesting which job definition associating with the mod is used in case of the job definition conflict.
# If there is any mod conflict, the program will give some instruction to edit this field.

job_excludes = [b"dummicist", b"matter_reanimator"]
